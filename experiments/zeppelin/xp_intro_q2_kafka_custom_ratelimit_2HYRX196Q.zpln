{
  "paragraphs": [
    {
      "title": "Flink packages configurations",
      "text": "%flink.conf\n\n# nexmark should have be copied in tmp before with this kind of command: kubectl -n manager cp nexmark-flink-0.2-SNAPSHOT.jar $(kubectl get pods -n manager -l app.kubernetes.io/name=zeppelin-server  -o jsonpath=\"{.items[0].metadata.name}\"):/tmp\n\nflink.execution.mode remote\nflink.execution.remote.host nexmark-flink-jobmanager.default\nflink.execution.remote.port 8081\n\n#table.exec.mini-batch.enabled: true\n#table.exec.mini-batch.allow-latency: 2s\n#table.exec.mini-batch.size: 50000\ntable.optimizer.distinct-agg.split.enabled: true\ntable.optimizer.simplify-operator-name-enabled: false\n\n# You need to run this paragraph first before running any flink code.\n\n#flink.execution.jars /tmp/nexmark-flink-0.2-SNAPSHOT.jar,/opt/flink/lib/flink-json-1.14.2.jar,/opt/flink/lib/flink-sql-connector-kafka_2.12-1.14.2.jar,/tmp/flink-sql-connector-kafka-ratelimit_2.12-1.14.2.jar\nflink.execution.packages org.apache.flink:flink-avro:1.14.2\nflink.execution.jars /tmp/nexmark-flink-0.2-SNAPSHOT.jar,/tmp/flink-sql-connector-kafka-ratelimit_2.12-1.14.2.jar\n# ADD JAR '/tmp/flink-sql-connector-kafka_2.12-1.14.2.jar';\n# ADD JAR '/tmp/flink-sql-connector-kafka-ratelimit_2.12-1.14.2.jar';\n#flink.execution.packages org.apache.flink:flink-connector-kafka_2.12:1.14.2,org.apache.flink:flink-sql-connector-kafka_2.12:1.14.2,org.apache.flink:flink-json:1.14.2\n\n# 'connector' = 'kafka-ratelimit',\n# ,'rate.limit' = '5'",
      "user": "anonymous",
      "dateUpdated": "2023-04-10T11:43:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/text",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099132_1034999147",
      "id": "paragraph_1659835829032_1650567033",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:29770"
    },
    {
      "title": "Kafka table creation",
      "text": "%flink.ssql(parallelism=1)\nDROP TABLE IF EXISTS kafka;\nCREATE TABLE kafka (\n    event_type int,\n    person ROW<\n        id  BIGINT,\n        name  VARCHAR,\n        emailAddress  VARCHAR,\n        creditCard  VARCHAR,\n        city  VARCHAR,\n        state  VARCHAR,\n        dateTime TIMESTAMP(3),\n        extra  VARCHAR>,\n    auction ROW<\n        id  BIGINT,\n        itemName  VARCHAR,\n        description  VARCHAR,\n        initialBid  BIGINT,\n        reserve  BIGINT,\n        dateTime  TIMESTAMP(3),\n        expires  TIMESTAMP(3),\n        seller  BIGINT,\n        category  BIGINT,\n        extra  VARCHAR>,\n    bid ROW<\n        auction  BIGINT,\n        bidder  BIGINT,\n        price  BIGINT,\n        channel  VARCHAR,\n        url  VARCHAR,\n        dateTime  TIMESTAMP(3),\n        extra  VARCHAR>,\n    dateTime AS\n        CASE\n            WHEN event_type = 0 THEN person.dateTime\n            WHEN event_type = 1 THEN auction.dateTime\n            ELSE bid.dateTime\n        END,\n    processingTime as PROCTIME(),\n    WATERMARK FOR dateTime AS dateTime - INTERVAL '4' SECOND\n) WITH (\n    'connector' = 'kafka-ratelimit',\n    'topic' = '${TOPIC}',\n    'scan.startup.mode' = 'earliest-offset',\n    'properties.bootstrap.servers' = '${BOOTSTRAP_SERVERS}',\n    'properties.group.id' = 'nexmark',\n    'sink.partitioner' = 'fixed',\n    'format' = 'avro'\n    ,'rate.limit' = '${TPS}'\n    );\n",
      "user": "anonymous",
      "dateUpdated": "2023-04-10T11:43:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "TPS": "100000000",
          "EVENTS_NUM": "0",
          "PERSON_PROPORTION": "1",
          "AUCTION_PROPORTION": "3",
          "BID_PROPORTION": "46",
          "NEXMARK_TABLE": "kafka",
          "TOPIC": "nexmark;nexmark-control",
          "BOOTSTRAP_SERVERS": "my-cluster-kafka-bootstrap.kafka:9092"
        },
        "forms": {
          "TOPIC": {
            "type": "TextBox",
            "name": "TOPIC",
            "displayName": "TOPIC",
            "hidden": false,
            "$$hashKey": "object:29858"
          },
          "BOOTSTRAP_SERVERS": {
            "type": "TextBox",
            "name": "BOOTSTRAP_SERVERS",
            "displayName": "BOOTSTRAP_SERVERS",
            "hidden": false,
            "$$hashKey": "object:29859"
          },
          "TPS": {
            "type": "TextBox",
            "name": "TPS",
            "displayName": "TPS",
            "hidden": false,
            "$$hashKey": "object:29860"
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099132_1837569959",
      "id": "paragraph_1666651615298_1230438717",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "$$hashKey": "object:29771"
    },
    {
      "title": "Datagen tables creation",
      "text": "%flink.ssql(parallelism=1)\nDROP TABLE IF EXISTS datagen;\nCREATE TABLE datagen (\n    event_type int,\n    person ROW<\n        id  BIGINT,\n        name  VARCHAR,\n        emailAddress  VARCHAR,\n        creditCard  VARCHAR,\n        city  VARCHAR,\n        state  VARCHAR,\n        dateTime TIMESTAMP(3),\n        extra  VARCHAR>,\n    auction ROW<\n        id  BIGINT,\n        itemName  VARCHAR,\n        description  VARCHAR,\n        initialBid  BIGINT,\n        reserve  BIGINT,\n        dateTime  TIMESTAMP(3),\n        expires  TIMESTAMP(3),\n        seller  BIGINT,\n        category  BIGINT,\n        extra  VARCHAR>,\n    bid ROW<\n        auction  BIGINT,\n        bidder  BIGINT,\n        price  BIGINT,\n        channel  VARCHAR,\n        url  VARCHAR,\n        dateTime  TIMESTAMP(3),\n        extra  VARCHAR>,\n    dateTime AS\n        CASE\n            WHEN event_type = 0 THEN person.dateTime\n            WHEN event_type = 1 THEN auction.dateTime\n            ELSE bid.dateTime\n        END,\n    WATERMARK FOR dateTime AS dateTime - INTERVAL '4' SECOND\n) WITH (\n    'connector' = 'nexmark',\n    'first-event.rate' = '${TPS}', -- 10000000\n    'next-event.rate' = '${TPS}', -- 10000000\n    'events.num' = '${EVENTS_NUM}', --100000000\n    'person.proportion' = '${PERSON_PROPORTION}', --1\n    'auction.proportion' = '${AUCTION_PROPORTION}', -- 3\n    'bid.proportion' = '${BID_PROPORTION}' -- 46\n);\n\n-- views\nDROP VIEW IF EXISTS person;\nCREATE VIEW person AS\nSELECT\n    person.id,\n    person.name,\n    person.emailAddress,\n    person.creditCard,\n    person.city,\n    person.state,\n    dateTime,\n    person.extra,\n    processingTime\nFROM ${NEXMARK_TABLE} WHERE event_type = 0;\n\nDROP VIEW IF EXISTS auction;\nCREATE VIEW auction AS\nSELECT\n    auction.id,\n    auction.itemName,\n    auction.description,\n    auction.initialBid,\n    auction.reserve,\n    dateTime,\n    auction.expires,\n    auction.seller,\n    auction.category,\n    auction.extra,\n    processingTime \nFROM ${NEXMARK_TABLE} WHERE event_type = 1;\nDROP VIEW IF EXISTS bid;\nCREATE VIEW bid AS\nSELECT\n    bid.auction,\n    bid.bidder,\n    bid.price,\n    bid.channel,\n    bid.url,\n    dateTime,\n    bid.extra,\n    processingTime\nFROM ${NEXMARK_TABLE} WHERE event_type = 2;\n\n",
      "user": "anonymous",
      "dateUpdated": "2023-04-09T00:11:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "TPS": "100000000",
          "EVENTS_NUM": "0",
          "PERSON_PROPORTION": "1",
          "AUCTION_PROPORTION": "3",
          "BID_PROPORTION": "46",
          "NEXMARK_TABLE": "kafka",
          "TOPIC": "nexmark;nexmark-control",
          "BOOTSTRAP_SERVERS": "my-cluster-kafka-bootstrap.kafka:9092"
        },
        "forms": {
          "TPS": {
            "type": "TextBox",
            "name": "TPS",
            "displayName": "TPS",
            "hidden": false,
            "$$hashKey": "object:29908"
          },
          "EVENTS_NUM": {
            "type": "TextBox",
            "name": "EVENTS_NUM",
            "displayName": "EVENTS_NUM",
            "hidden": false,
            "$$hashKey": "object:29909"
          },
          "PERSON_PROPORTION": {
            "type": "TextBox",
            "name": "PERSON_PROPORTION",
            "displayName": "PERSON_PROPORTION",
            "hidden": false,
            "$$hashKey": "object:29910"
          },
          "AUCTION_PROPORTION": {
            "type": "TextBox",
            "name": "AUCTION_PROPORTION",
            "displayName": "AUCTION_PROPORTION",
            "hidden": false,
            "$$hashKey": "object:29911"
          },
          "BID_PROPORTION": {
            "type": "TextBox",
            "name": "BID_PROPORTION",
            "displayName": "BID_PROPORTION",
            "hidden": false,
            "$$hashKey": "object:29912"
          },
          "NEXMARK_TABLE": {
            "type": "TextBox",
            "name": "NEXMARK_TABLE",
            "displayName": "NEXMARK_TABLE",
            "hidden": false,
            "$$hashKey": "object:29913"
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\nView has been dropped.\nView has been created.\nView has been dropped.\nView has been created.\nView has been dropped.\nView has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099132_301334216",
      "id": "paragraph_1659835912538_1597650629",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "$$hashKey": "object:29772"
    },
    {
      "title": "Preparation query5",
      "text": "%flink.ssql\n-- sink table (request specific)\nDROP TABLE IF EXISTS discard_sink;\nCREATE TABLE discard_sink (\n  auction  BIGINT,\n  price  BIGINT\n) WITH (\n  'connector' = 'blackhole'\n);\n",
      "user": "anonymous",
      "dateUpdated": "2023-04-09T00:11:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sql",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Table has been dropped.\nTable has been created.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099132_1664553570",
      "id": "paragraph_1661528712615_153395988",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "$$hashKey": "object:29773"
    },
    {
      "title": "Query",
      "text": "%flink\n\nvar sql = \"\"\"\nINSERT INTO discard_sink\nSELECT auction, price FROM bid WHERE MOD(auction, 123) = 0\n\"\"\"\n\n\nimport java.util.ArrayList;\nimport org.apache.flink.table.operations.ModifyOperation;\nimport scala.collection.JavaConversions._\nval operations = stenv.getParser().parse(sql)\n//val operations = stenv.getParser().parse(\"INSERT INTO discard_sink SELECT auction, bidder, price, dateTime, extra FROM bid\");\nval operation = operations.get(0)\nvar modifyOperations = new ArrayList[ModifyOperation](1)\nmodifyOperations.add(operation.asInstanceOf[ModifyOperation])\nval transformations = stenv.getPlanner().translate(modifyOperations)\nval streamGraph = senv.getWrappedStreamExecutionEnvironment.generateStreamGraph(transformations)\nprint(\"${TASK_PARALLELISM}\" + \"\\n\")\nprint(\"len \" + \"${TASK_PARALLELISM}\".length + \"\\n\")\n//var map = Map[String, Int]()\nprint(\"len2 \" + \"${TASK_PARALLELISM}\".length + \"\\n\")\nval m = for (line <- \"${TASK_PARALLELISM}\".split('|')) yield {\n    print(line + \"\\n\")\n    val splits: Array[String] = line.split(\";\")\n    if (splits.length > 1) {\n        Option(splits(0) -> splits(1).toInt)\n    } else {\n        None\n    }\n}\nprint(m.length)\nval map = m.flatten.toMap    \nprint(streamGraph)\n//streamGraph.setChaining(true) // activate chaining\nfor(streamNode <- streamGraph.getStreamNodes()) {\n    print(streamNode.getOperatorName() +\"\\n\")\n    streamNode.setSlotSharingGroup(streamNode.getOperatorName())\n    if (streamNode.getOperatorName().contains(\"Source\")) {\n        streamNode.setParallelism(${SOURCES})\n    } else {\n        streamNode.setParallelism(${PARALLELISM})\n    }\n    if (map.contains(streamNode.getOperatorName())) {\n        streamNode.setParallelism(map(streamNode.getOperatorName()))\n        print(streamNode.getOperatorName() + \"-\" + map.get(streamNode.getOperatorName()) +\"\\n\")\n    }\n}\nprint (\"Job name : ${JOB_NAME}\")\nstreamGraph.setJobName(\"${JOB_NAME}\")\n\nsenv.getWrappedStreamExecutionEnvironment.execute(streamGraph)",
      "user": "anonymous",
      "dateUpdated": "2023-04-09T00:11:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {
          "SOURCES": "32",
          "PARALLELISM": "1",
          "JOB_NAME": "20230323173048-0"
        },
        "forms": {
          "TASK_PARALLELISM": {
            "type": "TextBox",
            "name": "TASK_PARALLELISM",
            "displayName": "TASK_PARALLELISM",
            "hidden": false,
            "$$hashKey": "object:30008"
          },
          "SOURCES": {
            "type": "TextBox",
            "name": "SOURCES",
            "displayName": "SOURCES",
            "hidden": false,
            "$$hashKey": "object:30009"
          },
          "PARALLELISM": {
            "type": "TextBox",
            "name": "PARALLELISM",
            "displayName": "PARALLELISM",
            "hidden": false,
            "$$hashKey": "object:30010"
          },
          "JOB_NAME": {
            "type": "TextBox",
            "name": "JOB_NAME",
            "displayName": "JOB_NAME",
            "hidden": false,
            "$$hashKey": "object:30011"
          }
        }
      },
      "results": {
        "msg": [
          {
            "type": "TEXT",
            "data": ""
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099132_57821606",
      "id": "paragraph_1661521013634_1946755723",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "$$hashKey": "object:29774"
    },
    {
      "text": "%flink\n",
      "user": "anonymous",
      "dateUpdated": "2023-04-09T00:11:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1680999099133_1175506318",
      "id": "paragraph_1677070072365_1313195736",
      "dateCreated": "2023-04-09T00:11:39+0000",
      "status": "READY",
      "$$hashKey": "object:29775"
    }
  ],
  "name": "xp_intro_q2_kafka_custom_ratelimit",
  "id": "2HYRX196Q",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/xp_intro_q2_kafka_custom_ratelimit"
}